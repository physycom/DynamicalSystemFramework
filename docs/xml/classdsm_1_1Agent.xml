<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdsm_1_1Agent" kind="class" language="C++" prot="public">
    <compoundname>dsm::Agent</compoundname>
    <includes local="no">Agent.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Id</type>
      </param>
      <param>
        <type>typename Size</type>
      </param>
      <param>
        <type>typename Delay</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdsm_1_1Agent_1aabe336e28193f6cf7f104091d69692eb" prot="private" static="no" mutable="no">
        <type><ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt;</type>
        <definition>Itinerary&lt;Id&gt; dsm::Agent&lt; Id, Size, Delay &gt;::m_itinerary</definition>
        <argsstring></argsstring>
        <name>m_itinerary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="32" column="15" bodyfile="src/dsm/headers/Agent.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Agent_1ac281b44ab9ad42bfb2e47430855ea8d8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double dsm::Agent&lt; Id, Size, Delay &gt;::m_speed</definition>
        <argsstring></argsstring>
        <name>m_speed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="33" column="12" bodyfile="src/dsm/headers/Agent.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Agent_1ae4179c0476ac1f5968d5442125f46315" prot="private" static="no" mutable="no">
        <type>Delay</type>
        <definition>Delay dsm::Agent&lt; Id, Size, Delay &gt;::m_delay</definition>
        <argsstring></argsstring>
        <name>m_delay</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="34" column="11" bodyfile="src/dsm/headers/Agent.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Agent_1ae0201e983152e87df62487ee807b9270" prot="private" static="no" mutable="no">
        <type>Id</type>
        <definition>Id dsm::Agent&lt; Id, Size, Delay &gt;::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="35" column="8" bodyfile="src/dsm/headers/Agent.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Agent_1a6f5b623d7204fef47cb2fdbed3a1f3d4" prot="private" static="no" mutable="no">
        <type>Id</type>
        <definition>Id dsm::Agent&lt; Id, Size, Delay &gt;::m_streetId</definition>
        <argsstring></argsstring>
        <name>m_streetId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="36" column="8" bodyfile="src/dsm/headers/Agent.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Agent_1a23181f51c22c3c8a7ec080c2e3e27ffe" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int dsm::Agent&lt; Id, Size, Delay &gt;::m_time</definition>
        <argsstring></argsstring>
        <name>m_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="37" column="18" bodyfile="src/dsm/headers/Agent.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdsm_1_1Agent_1af0c7799d27104d01a60b03a1e159835d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Agent&lt; Id, Size, Delay &gt;::Agent</definition>
        <argsstring>()=default</argsstring>
        <name>Agent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1ae339680c2d78e9300cf5b971d3e93d36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; dsm::Agent&lt; Id, Size, Delay &gt;::Agent</definition>
        <argsstring>(Id index, Id streetId)</argsstring>
        <name>Agent</name>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Id</type>
          <declname>streetId</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The agent&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>streetId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the street currently occupied by the agent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="44" column="5" bodyfile="src/dsm/headers/Agent.hpp" bodystart="96" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a60c7d953a1620ca1f36fb3c521a77f31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; dsm::Agent&lt; Id, Size, Delay &gt;::Agent</definition>
        <argsstring>(Id index, Id streetId, Itinerary&lt; Id &gt; itinerary)</argsstring>
        <name>Agent</name>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Id</type>
          <declname>streetId</declname>
        </param>
        <param>
          <type><ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt;</type>
          <declname>itinerary</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The agent&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>streetId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the street currently occupied by the agent </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itinerary</parametername>
</parameternamelist>
<parameterdescription>
<para>The agent&apos;s itinerary </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="49" column="5" bodyfile="src/dsm/headers/Agent.hpp" bodystart="101" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a5f70a106f0cd0dbe22fe93a9bb774967" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; void dsm::Agent&lt; Id, Size, Delay &gt;::setStreetId</definition>
        <argsstring>(Id streetId)</argsstring>
        <name>setStreetId</name>
        <param>
          <type>Id</type>
          <declname>streetId</declname>
        </param>
        <briefdescription>
<para>Set the street occupied by the agent. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>streetId</parametername>
</parameternamelist>
<parameterdescription>
<para>The id of the street currently occupied by the agent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="53" column="10" bodyfile="src/dsm/headers/Agent.hpp" bodystart="106" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a89092045e8a24a2a8cc3947d409aca8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; void dsm::Agent&lt; Id, Size, Delay &gt;::setItinerary</definition>
        <argsstring>(Itinerary&lt; Id &gt; itinerary)</argsstring>
        <name>setItinerary</name>
        <param>
          <type><ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt;</type>
          <declname>itinerary</declname>
        </param>
        <briefdescription>
<para>Set the agent&apos;s itinerary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itinerary</parametername>
</parameternamelist>
<parameterdescription>
<para>The agent&apos;s itinerary </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="56" column="10" bodyfile="src/dsm/headers/Agent.hpp" bodystart="112" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a58c45d66c9c10bf4341a03da68602b76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; void dsm::Agent&lt; Id, Size, Delay &gt;::setSpeed</definition>
        <argsstring>(double speed)</argsstring>
        <name>setSpeed</name>
        <param>
          <type>double</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Set the agent&apos;s speed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The agent&apos;s speed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
<parametername>if</parametername>
</parameternamelist>
<parameterdescription>
<para>speed is negative </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="60" column="10" bodyfile="src/dsm/headers/Agent.hpp" bodystart="118" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a79899d539fb0778bf0f9bc4099f2e6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; void dsm::Agent&lt; Id, Size, Delay &gt;::setDelay</definition>
        <argsstring>(Delay delay)</argsstring>
        <name>setDelay</name>
        <param>
          <type>Delay</type>
          <declname>delay</declname>
        </param>
        <briefdescription>
<para>Set the agent&apos;s delay. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>delay</parametername>
</parameternamelist>
<parameterdescription>
<para>The agent&apos;s delay </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="63" column="10" bodyfile="src/dsm/headers/Agent.hpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a3e14cfc4c8211a3c85d17c406423eb1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; void dsm::Agent&lt; Id, Size, Delay &gt;::incrementTime</definition>
        <argsstring>()</argsstring>
        <name>incrementTime</name>
        <briefdescription>
<para>Increment the agent&apos;s time by 1. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::overflow_error</parametername>
<parametername>if</parametername>
</parameternamelist>
<parameterdescription>
<para>time has reached its maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="66" column="10" bodyfile="src/dsm/headers/Agent.hpp" bodystart="135" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a11017d8035351a0286df2438b6dae7fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; void dsm::Agent&lt; Id, Size, Delay &gt;::incrementTime</definition>
        <argsstring>(unsigned int time)</argsstring>
        <name>incrementTime</name>
        <param>
          <type>unsigned int</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Increment the agent&apos;s time by a given value. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to increment the agent&apos;s time by </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::overflow_error</parametername>
<parametername>if</parametername>
</parameternamelist>
<parameterdescription>
<para>time has reached its maximum value </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="70" column="10" bodyfile="src/dsm/headers/Agent.hpp" bodystart="146" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1acc15634eeaea621bf407f77cc30ac87a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Agent&lt; Id, Size, Delay &gt;::resetTime</definition>
        <argsstring>()</argsstring>
        <name>resetTime</name>
        <briefdescription>
<para>Reset the agent&apos;s time to 0. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1ab4362c6bbf383a8fb6e79829a80491de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Id</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; Id dsm::Agent&lt; Id, Size, Delay &gt;::index</definition>
        <argsstring>() const</argsstring>
        <name>index</name>
        <briefdescription>
<para>Get the agent&apos;s id. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The agent&apos;s id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="76" column="8" bodyfile="src/dsm/headers/Agent.hpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a4884d80484eb743c093cdc6dfab95ce2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Id</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; Id dsm::Agent&lt; Id, Size, Delay &gt;::streetId</definition>
        <argsstring>() const</argsstring>
        <name>streetId</name>
        <briefdescription>
<para>Get the id of the street currently occupied by the agent. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The id of the street currently occupied by the agent </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="79" column="8" bodyfile="src/dsm/headers/Agent.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1aa3d8436b655f52f57759834fd538162d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref>&lt; Id &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; const Itinerary&lt; Id &gt; &amp; dsm::Agent&lt; Id, Size, Delay &gt;::itinerary</definition>
        <argsstring>() const</argsstring>
        <name>itinerary</name>
        <briefdescription>
<para>Get the agent&apos;s itinerary. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The agent&apos;s itinerary </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="82" column="21" bodyfile="src/dsm/headers/Agent.hpp" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1aa52267ce4c1e4bb7249c8ef8da769f1b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; double dsm::Agent&lt; Id, Size, Delay &gt;::speed</definition>
        <argsstring>() const</argsstring>
        <name>speed</name>
        <briefdescription>
<para>Get the agent&apos;s speed. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The agent&apos;s speed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="85" column="12" bodyfile="src/dsm/headers/Agent.hpp" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a34bbd676e3cb804daf4a28eb421f692c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Delay</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; Delay dsm::Agent&lt; Id, Size, Delay &gt;::delay</definition>
        <argsstring>() const</argsstring>
        <name>delay</name>
        <briefdescription>
<para>Get the agent&apos;s delay. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The agent&apos;s delay </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="88" column="11" bodyfile="src/dsm/headers/Agent.hpp" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Agent_1a4c2d806909fdd49f4f1ae8ae8a847647" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; &amp;&amp;is_numeric_v&lt; Delay &gt; unsigned int dsm::Agent&lt; Id, Size, Delay &gt;::time</definition>
        <argsstring>() const</argsstring>
        <name>time</name>
        <briefdescription>
<para>Get the agent&apos;s travel time. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The agent&apos;s travel time </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Agent.hpp" line="91" column="18" bodyfile="src/dsm/headers/Agent.hpp" bodystart="181" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref> class represents an agent in the network. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Id</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the agent&apos;s id. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Size</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the size of a street. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Delay</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the agent&apos;s delay. It must be a numeric type (see utility/TypeTraits/is_numeric.hpp). </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="src/dsm/headers/Agent.hpp" line="30" column="3" bodyfile="src/dsm/headers/Agent.hpp" bodystart="30" bodyend="92"/>
    <listofallmembers>
      <member refid="classdsm_1_1Agent_1af0c7799d27104d01a60b03a1e159835d" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>Agent</name></member>
      <member refid="classdsm_1_1Agent_1ae339680c2d78e9300cf5b971d3e93d36" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>Agent</name></member>
      <member refid="classdsm_1_1Agent_1a60c7d953a1620ca1f36fb3c521a77f31" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>Agent</name></member>
      <member refid="classdsm_1_1Agent_1a34bbd676e3cb804daf4a28eb421f692c" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>delay</name></member>
      <member refid="classdsm_1_1Agent_1a3e14cfc4c8211a3c85d17c406423eb1d" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>incrementTime</name></member>
      <member refid="classdsm_1_1Agent_1a11017d8035351a0286df2438b6dae7fa" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>incrementTime</name></member>
      <member refid="classdsm_1_1Agent_1ab4362c6bbf383a8fb6e79829a80491de" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>index</name></member>
      <member refid="classdsm_1_1Agent_1aa3d8436b655f52f57759834fd538162d" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>itinerary</name></member>
      <member refid="classdsm_1_1Agent_1ae4179c0476ac1f5968d5442125f46315" prot="private" virt="non-virtual"><scope>dsm::Agent</scope><name>m_delay</name></member>
      <member refid="classdsm_1_1Agent_1ae0201e983152e87df62487ee807b9270" prot="private" virt="non-virtual"><scope>dsm::Agent</scope><name>m_index</name></member>
      <member refid="classdsm_1_1Agent_1aabe336e28193f6cf7f104091d69692eb" prot="private" virt="non-virtual"><scope>dsm::Agent</scope><name>m_itinerary</name></member>
      <member refid="classdsm_1_1Agent_1ac281b44ab9ad42bfb2e47430855ea8d8" prot="private" virt="non-virtual"><scope>dsm::Agent</scope><name>m_speed</name></member>
      <member refid="classdsm_1_1Agent_1a6f5b623d7204fef47cb2fdbed3a1f3d4" prot="private" virt="non-virtual"><scope>dsm::Agent</scope><name>m_streetId</name></member>
      <member refid="classdsm_1_1Agent_1a23181f51c22c3c8a7ec080c2e3e27ffe" prot="private" virt="non-virtual"><scope>dsm::Agent</scope><name>m_time</name></member>
      <member refid="classdsm_1_1Agent_1acc15634eeaea621bf407f77cc30ac87a" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>resetTime</name></member>
      <member refid="classdsm_1_1Agent_1a79899d539fb0778bf0f9bc4099f2e6ae" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>setDelay</name></member>
      <member refid="classdsm_1_1Agent_1a89092045e8a24a2a8cc3947d409aca8b" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>setItinerary</name></member>
      <member refid="classdsm_1_1Agent_1a58c45d66c9c10bf4341a03da68602b76" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>setSpeed</name></member>
      <member refid="classdsm_1_1Agent_1a5f70a106f0cd0dbe22fe93a9bb774967" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>setStreetId</name></member>
      <member refid="classdsm_1_1Agent_1aa52267ce4c1e4bb7249c8ef8da769f1b" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>speed</name></member>
      <member refid="classdsm_1_1Agent_1a4884d80484eb743c093cdc6dfab95ce2" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>streetId</name></member>
      <member refid="classdsm_1_1Agent_1a4c2d806909fdd49f4f1ae8ae8a847647" prot="public" virt="non-virtual"><scope>dsm::Agent</scope><name>time</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
