<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdsm_1_1Itinerary" kind="class" language="C++" prot="public">
    <compoundname>dsm::Itinerary</compoundname>
    <includes local="no">Itinerary.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Id</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdsm_1_1Itinerary_1abff9bd1a883c8d93f044f73bc17ba7f8" prot="private" static="no" mutable="no">
        <type><ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref>&lt; Id, bool &gt;</type>
        <definition>SparseMatrix&lt;Id, bool&gt; dsm::Itinerary&lt; Id &gt;::m_path</definition>
        <argsstring></argsstring>
        <name>m_path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="23" column="18" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Itinerary_1ad60cf04c4de8dd879a4788de3759cdb2" prot="private" static="no" mutable="no">
        <type>std::pair&lt; Id, Id &gt;</type>
        <definition>std::pair&lt;Id, Id&gt; dsm::Itinerary&lt; Id &gt;::m_trip</definition>
        <argsstring></argsstring>
        <name>m_trip</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="24" column="15" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdsm_1_1Itinerary_1abe674b77c57bcc3c3cde6a4d95d251f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Itinerary&lt; Id &gt;::Itinerary</definition>
        <argsstring>()=default</argsstring>
        <name>Itinerary</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1a3bcef6426d4f397bdd80ae809e4abefa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; dsm::Itinerary&lt; Id &gt;::Itinerary</definition>
        <argsstring>(Id source, Id destination)</argsstring>
        <name>Itinerary</name>
        <param>
          <type>Id</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Id</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The itinerary&apos;s source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>The itinerary&apos;s destination </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="31" column="5" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1a80b029a98863cbe8faefe1eeb9f01eaa" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>dsm::Itinerary&lt; Id &gt;::Itinerary</definition>
        <argsstring>(std::pair&lt; Id, Id &gt; trip)</argsstring>
        <name>Itinerary</name>
        <param>
          <type>std::pair&lt; Id, Id &gt;</type>
          <declname>trip</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trip</parametername>
</parameternamelist>
<parameterdescription>
<para>An std::pair containing the itinerary&apos;s source and destination </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="34" column="14" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1a34476f64330c4b68f18fde47b1cfc196" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; dsm::Itinerary&lt; Id &gt;::Itinerary</definition>
        <argsstring>(Id source, Id destination, SparseMatrix&lt; Id, bool &gt; path)</argsstring>
        <name>Itinerary</name>
        <param>
          <type>Id</type>
          <declname>source</declname>
        </param>
        <param>
          <type>Id</type>
          <declname>destination</declname>
        </param>
        <param>
          <type><ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref>&lt; Id, bool &gt;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Construct a new Itinerary&lt;Id&gt;:: <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The itinerary&apos;s source </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>The itinerary&apos;s destination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>An adjacency matrix made by a <ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref> representing the itinerary&apos;s path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="39" column="5" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="75" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1ac10c49a80cf8eafa3d8526562411872e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; dsm::Itinerary&lt; Id &gt;::Itinerary</definition>
        <argsstring>(std::pair&lt; Id, Id &gt; trip, SparseMatrix&lt; Id, bool &gt; path)</argsstring>
        <name>Itinerary</name>
        <param>
          <type>std::pair&lt; Id, Id &gt;</type>
          <declname>trip</declname>
        </param>
        <param>
          <type><ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref>&lt; Id, bool &gt;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Construct a new Itinerary&lt;Id&gt;:: <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>trip</parametername>
</parameternamelist>
<parameterdescription>
<para>An std::pair containing the itinerary&apos;s source and destination </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>An adjacency matrix made by a <ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref> representing the itinerary&apos;s path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="43" column="5" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="79" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1a71f1866902c5d3d6144adfd3309aa292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; void dsm::Itinerary&lt; Id &gt;::setSource</definition>
        <argsstring>(Id source)</argsstring>
        <name>setSource</name>
        <param>
          <type>Id</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Set the itinerary&apos;s source. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The itinerary&apos;s source </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="47" column="10" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="84" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1a94483f076fcf7e4262e927c819906454" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; void dsm::Itinerary&lt; Id &gt;::setDestination</definition>
        <argsstring>(Id destination)</argsstring>
        <name>setDestination</name>
        <param>
          <type>Id</type>
          <declname>destination</declname>
        </param>
        <briefdescription>
<para>Set the itinerary&apos;s destination. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>destination</parametername>
</parameternamelist>
<parameterdescription>
<para>The itinerary&apos;s destination </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="50" column="10" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1a778a325a4164bd8931faf0eed5cb2960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; void dsm::Itinerary&lt; Id &gt;::setPath</definition>
        <argsstring>(SparseMatrix&lt; Id, bool &gt; path)</argsstring>
        <name>setPath</name>
        <param>
          <type><ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref>&lt; Id, bool &gt;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
<para>Set the itinerary&apos;s path. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>An adjacency matrix made by a <ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref> representing the itinerary&apos;s path </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="53" column="10" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1a8ffdda4eb8e51d6c0988cc6b4666b009" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Id</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; Id dsm::Itinerary&lt; Id &gt;::source</definition>
        <argsstring>() const</argsstring>
        <name>source</name>
        <briefdescription>
<para>Get the itinerary&apos;s source. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Id The itinerary&apos;s source </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="57" column="8" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="100" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1ae637abd0e6aa89fa956c732ac601f25f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Id</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; Id dsm::Itinerary&lt; Id &gt;::destination</definition>
        <argsstring>() const</argsstring>
        <name>destination</name>
        <briefdescription>
<para>Get the itinerary&apos;s destination. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Id The itinerary&apos;s destination </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="60" column="8" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1ae942a76b5e1ea0b10e83ed458ef58488" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::pair&lt; Id, Id &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; const std::pair&lt; Id, Id &gt; &amp; dsm::Itinerary&lt; Id &gt;::trip</definition>
        <argsstring>() const</argsstring>
        <name>trip</name>
        <briefdescription>
<para>Get the itinerary&apos;s trip. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::pair&lt;Id, Id&gt; An std::pair containing the itinerary&apos;s source and destination </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="63" column="21" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Itinerary_1a45a888226ac4d09be5c2c64d903b964e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref>&lt; Id, bool &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; const SparseMatrix&lt; Id, bool &gt; &amp; dsm::Itinerary&lt; Id &gt;::path</definition>
        <argsstring>() const</argsstring>
        <name>path</name>
        <briefdescription>
<para>Get the itinerary&apos;s path. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix&lt;Id, bool&gt;</ref> An adjacency matrix made by a <ref refid="classdsm_1_1SparseMatrix" kindref="compound">SparseMatrix</ref> representing the itinerary&apos;s path </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Itinerary.hpp" line="67" column="24" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="115" bodyend="117"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdsm_1_1Itinerary" kindref="compound">Itinerary</ref> class represents an itinerary in the network. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Id</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the itinerary&apos;s id. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="src/dsm/headers/Itinerary.hpp" line="21" column="3" bodyfile="src/dsm/headers/Itinerary.hpp" bodystart="21" bodyend="68"/>
    <listofallmembers>
      <member refid="classdsm_1_1Itinerary_1ae637abd0e6aa89fa956c732ac601f25f" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>destination</name></member>
      <member refid="classdsm_1_1Itinerary_1abe674b77c57bcc3c3cde6a4d95d251f9" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>Itinerary</name></member>
      <member refid="classdsm_1_1Itinerary_1a3bcef6426d4f397bdd80ae809e4abefa" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>Itinerary</name></member>
      <member refid="classdsm_1_1Itinerary_1a80b029a98863cbe8faefe1eeb9f01eaa" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>Itinerary</name></member>
      <member refid="classdsm_1_1Itinerary_1a34476f64330c4b68f18fde47b1cfc196" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>Itinerary</name></member>
      <member refid="classdsm_1_1Itinerary_1ac10c49a80cf8eafa3d8526562411872e" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>Itinerary</name></member>
      <member refid="classdsm_1_1Itinerary_1abff9bd1a883c8d93f044f73bc17ba7f8" prot="private" virt="non-virtual"><scope>dsm::Itinerary</scope><name>m_path</name></member>
      <member refid="classdsm_1_1Itinerary_1ad60cf04c4de8dd879a4788de3759cdb2" prot="private" virt="non-virtual"><scope>dsm::Itinerary</scope><name>m_trip</name></member>
      <member refid="classdsm_1_1Itinerary_1a45a888226ac4d09be5c2c64d903b964e" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>path</name></member>
      <member refid="classdsm_1_1Itinerary_1a94483f076fcf7e4262e927c819906454" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>setDestination</name></member>
      <member refid="classdsm_1_1Itinerary_1a778a325a4164bd8931faf0eed5cb2960" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>setPath</name></member>
      <member refid="classdsm_1_1Itinerary_1a71f1866902c5d3d6144adfd3309aa292" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>setSource</name></member>
      <member refid="classdsm_1_1Itinerary_1a8ffdda4eb8e51d6c0988cc6b4666b009" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>source</name></member>
      <member refid="classdsm_1_1Itinerary_1ae942a76b5e1ea0b10e83ed458ef58488" prot="public" virt="non-virtual"><scope>dsm::Itinerary</scope><name>trip</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
