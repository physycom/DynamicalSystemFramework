<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="HashFunctions_8hpp" kind="file" language="C++">
    <compoundname>HashFunctions.hpp</compoundname>
    <includes local="no">functional</includes>
    <includes local="no">memory</includes>
    <includes refid="Node_8hpp" local="yes">../headers/Node.hpp</includes>
    <includes refid="Street_8hpp" local="yes">../headers/Street.hpp</includes>
    <includedby refid="dsm_8hpp" local="yes">src/dsm/dsm.hpp</includedby>
    <includedby refid="Graph_8hpp" local="yes">src/dsm/headers/Graph.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/dsm/utility/HashFunctions.hpp</label>
        <link refid="HashFunctions_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>functional</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="structdsm_1_1nodeHash" prot="public">dsm::nodeHash</innerclass>
    <innerclass refid="structdsm_1_1streetHash" prot="public">dsm::streetHash</innerclass>
    <innernamespace refid="namespacedsm">dsm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>HashFunctions_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>HashFunctions_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/Node.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../headers/Street.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dsm<sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Alias<sp/>for<sp/>shared<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">shared<sp/>=<sp/>std::shared_ptr&lt;T&gt;;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id&gt;</highlight></codeline>
<codeline lineno="17" refid="structdsm_1_1nodeHash" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdsm_1_1nodeHash" kindref="compound">nodeHash</ref><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>const<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shared&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">Node&lt;Id&gt;</ref>&gt;&amp;<sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">node</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">node</ref>-&gt;id();<sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>non-const<sp/>nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shared&lt;<ref refid="classdsm_1_1Itinerary" kindref="compound">Node&lt;Id&gt;</ref>&gt;&amp;<sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">node</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">node</ref>-&gt;id();<sp/>}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="25" refid="structdsm_1_1streetHash" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdsm_1_1streetHash" kindref="compound">streetHash</ref><sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>const<sp/>streets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shared&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">Street&lt;Id, Size&gt;</ref>&gt;&amp;<sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">street</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classdsm_1_1Itinerary" kindref="compound">street</ref>-&gt;nodePair().first)<sp/>^<sp/>(<ref refid="classdsm_1_1Itinerary" kindref="compound">street</ref>-&gt;getNodePair().second);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>pointers<sp/>to<sp/>non-const<sp/>streets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>shared&lt;<ref refid="classdsm_1_1Itinerary" kindref="compound">Street&lt;Id, Size&gt;</ref>&gt;&amp;<sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">street</ref>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="classdsm_1_1Itinerary" kindref="compound">street</ref>-&gt;nodePair().first)<sp/>^<sp/>(<ref refid="classdsm_1_1Itinerary" kindref="compound">street</ref>-&gt;nodePair().second);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Equality<sp/>operators<sp/>for<sp/>Nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id&gt;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(shared&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">Node&lt;Id&gt;</ref>&gt;<sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">p1</ref>,<sp/>shared&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">Node&lt;Id&gt;</ref>&gt;<sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">p2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">p1</ref>-&gt;id()<sp/>==<sp/><ref refid="classdsm_1_1Itinerary" kindref="compound">p2</ref>-&gt;id();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id&gt;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(shared&lt;Node&lt;Id&gt;&gt;<sp/>p1,<sp/>shared&lt;Node&lt;Id&gt;&gt;<sp/>p2)<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p1-&gt;id()<sp/>==<sp/>p2-&gt;id();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Equality<sp/>operators<sp/>for<sp/>Streets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Size&gt;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(shared&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Street&lt;Id,<sp/>Size&gt;&gt;<sp/>p1,<sp/>shared&lt;</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Street&lt;Id,<sp/>Size&gt;&gt;<sp/>p2)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p1-&gt;nodePair().first<sp/>==<sp/>p2-&gt;nodePair().first<sp/>&amp;&amp;<sp/>p1-&gt;nodePair().second<sp/>==<sp/>p2-&gt;nodePair().second;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dsm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/dsm/utility/HashFunctions.hpp"/>
  </compounddef>
</doxygen>
