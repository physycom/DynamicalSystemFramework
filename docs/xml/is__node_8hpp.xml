<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="is__node_8hpp" kind="file" language="C++">
    <compoundname>is_node.hpp</compoundname>
    <includes local="no">concepts</includes>
    <includes local="no">memory</includes>
    <includes local="no">type_traits</includes>
    <includedby refid="dsm_8hpp" local="yes">src/dsm/dsm.hpp</includedby>
    <includedby refid="Graph_8hpp" local="yes">src/dsm/headers/Graph.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>src/dsm/utility/TypeTraits/is_node.hpp</label>
        <link refid="is__node_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>concepts</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
    </incdepgraph>
    <innerclass refid="structdsm_1_1is__node" prot="public">dsm::is_node</innerclass>
    <innerclass refid="structdsm_1_1is__node_3_01Node_3_01Id_01_4_01_4" prot="public">dsm::is_node&lt; Node&lt; Id &gt; &gt;</innerclass>
    <innerclass refid="structdsm_1_1is__node_3_01const_01Node_3_01Id_01_4_01_6_01_4" prot="public">dsm::is_node&lt; const Node&lt; Id &gt; &amp; &gt;</innerclass>
    <innerclass refid="structdsm_1_1is__node_3_01shared_3_01Node_3_01Id_01_4_01_4_01_4" prot="public">dsm::is_node&lt; shared&lt; Node&lt; Id &gt; &gt; &gt;</innerclass>
    <innernamespace refid="namespacedsm">dsm</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>is_node_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>is_node_hpp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;concepts&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">dsm<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">requires</highlight><highlight class="normal"><sp/>std::unsigned_integral&lt;Id&gt;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Node;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Alias<sp/>for<sp/>shared<sp/>pointers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">shared<sp/>=<sp/>std::shared_ptr&lt;T&gt;;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>define<sp/>is_node<sp/>type<sp/>trait</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="19" refid="structdsm_1_1is__node" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdsm_1_1is__node" kindref="compound">is_node</ref><sp/>:<sp/>std::false_type<sp/>{};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id&gt;</highlight></codeline>
<codeline lineno="22" refid="structdsm_1_1is__node_3_01Node_3_01Id_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdsm_1_1is__node" kindref="compound">is_node</ref>&lt;<ref refid="classdsm_1_1Node" kindref="compound">Node</ref>&lt;<ref refid="classdsm_1_1Itinerary" kindref="compound">Id</ref>&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id&gt;</highlight></codeline>
<codeline lineno="25" refid="structdsm_1_1is__node_3_01const_01Node_3_01Id_01_4_01_6_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdsm_1_1is__node" kindref="compound">is_node</ref>&lt;<ref refid="classdsm_1_1Itinerary" kindref="compound">const</ref><sp/><ref refid="classdsm_1_1Node" kindref="compound">Node</ref>&lt;<ref refid="classdsm_1_1Itinerary" kindref="compound">Id</ref>&gt;&amp;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Id&gt;</highlight></codeline>
<codeline lineno="28" refid="structdsm_1_1is__node_3_01shared_3_01Node_3_01Id_01_4_01_4_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdsm_1_1is__node" kindref="compound">is_node</ref>&lt;shared&lt;<ref refid="classdsm_1_1Node" kindref="compound">Node</ref>&lt;<ref refid="classdsm_1_1Itinerary" kindref="compound">Id</ref>&gt;&gt;&gt;<sp/>:<sp/>std::true_type<sp/>{};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_node_v<sp/>=<sp/><ref refid="structdsm_1_1is__node" kindref="compound">is_node&lt;T&gt;::value</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal">};<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>dsm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/dsm/utility/TypeTraits/is_node.hpp"/>
  </compounddef>
</doxygen>
