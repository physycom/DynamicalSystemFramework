<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdsm_1_1Node" kind="class" language="C++" prot="public">
    <compoundname>dsm::Node</compoundname>
    <includes local="no">Node.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Id</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdsm_1_1Node_1a0e4af4b2760e13608a0a4ae313b98fd7" prot="private" static="no" mutable="no">
        <type>std::queue&lt; Id &gt;</type>
        <definition>std::queue&lt;Id&gt; dsm::Node&lt; Id &gt;::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="22" column="16" bodyfile="src/dsm/headers/Node.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Node_1a22eda670f2cc65f7ec08d2916de33d35" prot="private" static="no" mutable="no">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt;double, double&gt; dsm::Node&lt; Id &gt;::m_coords</definition>
        <argsstring></argsstring>
        <name>m_coords</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="23" column="15" bodyfile="src/dsm/headers/Node.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Node_1a65e7816217a27bfedbe91e0f866b2c10" prot="private" static="no" mutable="no">
        <type>Id</type>
        <definition>Id dsm::Node&lt; Id &gt;::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="24" column="8" bodyfile="src/dsm/headers/Node.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdsm_1_1Node_1a75d2959b0ca30715dc3086b68aaa6b61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Node&lt; Id &gt;::Node</definition>
        <argsstring>()=default</argsstring>
        <name>Node</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="27" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a892ce1333095c40e25e5018f33514ae6" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; dsm::Node&lt; Id &gt;::Node</definition>
        <argsstring>(Id id)</argsstring>
        <name>Node</name>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Node" kindref="compound">Node</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>node&apos;s id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="30" column="14" bodyfile="src/dsm/headers/Node.hpp" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1adb1781f3464d8ac34c5f52c90858459c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; dsm::Node&lt; Id &gt;::Node</definition>
        <argsstring>(Id id, std::pair&lt; double, double &gt; coords)</argsstring>
        <name>Node</name>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::pair&lt; double, double &gt;</type>
          <declname>coords</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Node" kindref="compound">Node</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>node&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coords</parametername>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>std::pair containing the node&apos;s coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="34" column="5" bodyfile="src/dsm/headers/Node.hpp" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a92106f14d03da91df50ab229733f59a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; dsm::Node&lt; Id &gt;::Node</definition>
        <argsstring>(Id id, std::pair&lt; double, double &gt; coords, std::queue&lt; Id &gt; queue)</argsstring>
        <name>Node</name>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
        <param>
          <type>std::pair&lt; double, double &gt;</type>
          <declname>coords</declname>
        </param>
        <param>
          <type>std::queue&lt; Id &gt;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Node" kindref="compound">Node</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>node&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>coords</parametername>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>std::pair containing the node&apos;s coordinates </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>queue</parametername>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>std::queue containing the node&apos;s queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="39" column="5" bodyfile="src/dsm/headers/Node.hpp" bodystart="69" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1acdec7de88a46ad7edc2e561b8e2014a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; void dsm::Node&lt; Id &gt;::setCoords</definition>
        <argsstring>(std::pair&lt; double, double &gt; coords)</argsstring>
        <name>setCoords</name>
        <param>
          <type>std::pair&lt; double, double &gt;</type>
          <declname>coords</declname>
        </param>
        <briefdescription>
<para>Set the node&apos;s coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coords</parametername>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>std::pair containing the node&apos;s coordinates </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="43" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="80" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a6337227506949168f1cb561175effa21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; void dsm::Node&lt; Id &gt;::setQueue</definition>
        <argsstring>(std::queue&lt; Id &gt; queue)</argsstring>
        <name>setQueue</name>
        <param>
          <type>std::queue&lt; Id &gt;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Set the node&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
<parametername>A</parametername>
</parameternamelist>
<parameterdescription>
<para>std::queue containing the node&apos;s queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="46" column="10" bodyfile="src/dsm/headers/Node.hpp" bodystart="86" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1af11c9fd77141a161613842965c62e273" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Id</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; Id dsm::Node&lt; Id &gt;::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
<para>Get the node&apos;s id. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Id, The node&apos;s id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="50" column="8" bodyfile="src/dsm/headers/Node.hpp" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a95872f94b4428c666566b9dd2855f4e9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::pair&lt; double, double &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; const std::pair&lt; double, double &gt; &amp; dsm::Node&lt; Id &gt;::coords</definition>
        <argsstring>() const</argsstring>
        <name>coords</name>
        <briefdescription>
<para>Get the node&apos;s coordinates. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::pair&lt;double,, double&gt; A std::pair containing the node&apos;s coordinates </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="53" column="21" bodyfile="src/dsm/headers/Node.hpp" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Node_1a99f5fd6d030ac5823e00c5b8c8aff704" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::queue&lt; Id &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; const std::queue&lt; Id &gt; &amp; dsm::Node&lt; Id &gt;::queue</definition>
        <argsstring>() const</argsstring>
        <name>queue</name>
        <briefdescription>
<para>Get the node&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::queue&lt;Id&gt;, A std::queue containing the node&apos;s queue </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Node.hpp" line="56" column="22" bodyfile="src/dsm/headers/Node.hpp" bodystart="98" bodyend="100"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdsm_1_1Node" kindref="compound">Node</ref> class represents a node in the network. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Id</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the node&apos;s id. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="src/dsm/headers/Node.hpp" line="20" column="3" bodyfile="src/dsm/headers/Node.hpp" bodystart="20" bodyend="57"/>
    <listofallmembers>
      <member refid="classdsm_1_1Node_1a95872f94b4428c666566b9dd2855f4e9" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>coords</name></member>
      <member refid="classdsm_1_1Node_1af11c9fd77141a161613842965c62e273" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>id</name></member>
      <member refid="classdsm_1_1Node_1a22eda670f2cc65f7ec08d2916de33d35" prot="private" virt="non-virtual"><scope>dsm::Node</scope><name>m_coords</name></member>
      <member refid="classdsm_1_1Node_1a65e7816217a27bfedbe91e0f866b2c10" prot="private" virt="non-virtual"><scope>dsm::Node</scope><name>m_id</name></member>
      <member refid="classdsm_1_1Node_1a0e4af4b2760e13608a0a4ae313b98fd7" prot="private" virt="non-virtual"><scope>dsm::Node</scope><name>m_queue</name></member>
      <member refid="classdsm_1_1Node_1a75d2959b0ca30715dc3086b68aaa6b61" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>Node</name></member>
      <member refid="classdsm_1_1Node_1a892ce1333095c40e25e5018f33514ae6" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>Node</name></member>
      <member refid="classdsm_1_1Node_1adb1781f3464d8ac34c5f52c90858459c" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>Node</name></member>
      <member refid="classdsm_1_1Node_1a92106f14d03da91df50ab229733f59a5" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>Node</name></member>
      <member refid="classdsm_1_1Node_1a99f5fd6d030ac5823e00c5b8c8aff704" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>queue</name></member>
      <member refid="classdsm_1_1Node_1acdec7de88a46ad7edc2e561b8e2014a6" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>setCoords</name></member>
      <member refid="classdsm_1_1Node_1a6337227506949168f1cb561175effa21" prot="public" virt="non-virtual"><scope>dsm::Node</scope><name>setQueue</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
