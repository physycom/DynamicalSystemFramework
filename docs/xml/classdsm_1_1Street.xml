<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classdsm_1_1Street" kind="class" language="C++" prot="public">
    <compoundname>dsm::Street</compoundname>
    <includes local="no">Street.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Id</type>
      </param>
      <param>
        <type>typename Size</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdsm_1_1Street_1a65440345861cd64e77fcf2eaa2abba77" prot="private" static="no" mutable="no">
        <type>std::queue&lt; Size &gt;</type>
        <definition>std::queue&lt;Size&gt; dsm::Street&lt; Id, Size &gt;::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="31" column="16" bodyfile="src/dsm/headers/Street.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1a6b4b71fa7703aa69a106cf75c2d10771" prot="private" static="no" mutable="no">
        <type>std::pair&lt; Id, Id &gt;</type>
        <definition>std::pair&lt;Id, Id&gt; dsm::Street&lt; Id, Size &gt;::m_nodePair</definition>
        <argsstring></argsstring>
        <name>m_nodePair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="32" column="15" bodyfile="src/dsm/headers/Street.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1a6cdc2160bf02ac9f27e8cadc26f8432c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double dsm::Street&lt; Id, Size &gt;::m_len</definition>
        <argsstring></argsstring>
        <name>m_len</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="33" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1ad4c28d56ff110b5b270deca0b76f9808" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double dsm::Street&lt; Id, Size &gt;::m_maxSpeed</definition>
        <argsstring></argsstring>
        <name>m_maxSpeed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="34" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1abb10ab6ed171be672181caf05b2b6af7" prot="private" static="no" mutable="no">
        <type>Id</type>
        <definition>Id dsm::Street&lt; Id, Size &gt;::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="35" column="8" bodyfile="src/dsm/headers/Street.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1a61b00bbb44683c0b0bbb8f8ad7377dd0" prot="private" static="no" mutable="no">
        <type>Size</type>
        <definition>Size dsm::Street&lt; Id, Size &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="36" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1a2d1ab859347c98ce129d9ac9e5bf7a9a" prot="private" static="no" mutable="no">
        <type>Size</type>
        <definition>Size dsm::Street&lt; Id, Size &gt;::m_capacity</definition>
        <argsstring></argsstring>
        <name>m_capacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="37" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classdsm_1_1Street_1a1002585429a3a23e1f3c58b53f24346b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>()=default</argsstring>
        <name>Street</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a77acd8f3557cb9eb855ab72f99b67c6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>(Id index)</argsstring>
        <name>Street</name>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="43" column="5" bodyfile="src/dsm/headers/Street.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a262b4243ec55001ce00233d24ac0a9a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>(Id index, Size capacity, double len)</argsstring>
        <name>Street</name>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s capacity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="48" column="5" bodyfile="src/dsm/headers/Street.hpp" bodystart="130" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ada830ed31c1d483d221643af9f933029" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>(Id index, Size capacity, double len, std::pair&lt; Id, Id &gt; nodePair)</argsstring>
        <name>Street</name>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
        <param>
          <type>std::pair&lt; Id, Id &gt;</type>
          <declname>nodePair</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s capacity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodePair</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s node pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="54" column="5" bodyfile="src/dsm/headers/Street.hpp" bodystart="135" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a21990e15f83949ee0b15b9d1e5fced60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>(Id index, Size capacity, double len, double maxSpeed, std::pair&lt; Id, Id &gt; nodePair)</argsstring>
        <name>Street</name>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxSpeed</declname>
        </param>
        <param>
          <type>std::pair&lt; Id, Id &gt;</type>
          <declname>nodePair</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s capacity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSpeed</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s speed limit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodePair</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s node pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="61" column="5" bodyfile="src/dsm/headers/Street.hpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a1864aa8dfa760187943eef2586685a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Street&lt; Id, Size &gt;::setId</definition>
        <argsstring>(Id id)</argsstring>
        <name>setId</name>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>Set the street&apos;s id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="65" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a55cfbf1ea269b38411310083487d96e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Street&lt; Id, Size &gt;::setCapacity</definition>
        <argsstring>(Size capacity)</argsstring>
        <name>setCapacity</name>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
<para>Set the street&apos;s capacity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s capacity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="68" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="157" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1acb9278c14820710ac075c7c07380814b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Street&lt; Id, Size &gt;::setLength</definition>
        <argsstring>(double len)</argsstring>
        <name>setLength</name>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
        <briefdescription>
<para>Set the street&apos;s length. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>len</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="71" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ad6b99ebe61048f001caadd9f303ae216" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Street&lt; Id, Size &gt;::setQueue</definition>
        <argsstring>(std::queue&lt; Size &gt; queue)</argsstring>
        <name>setQueue</name>
        <param>
          <type>std::queue&lt; Size &gt;</type>
          <declname>queue</declname>
        </param>
        <briefdescription>
<para>Set the street&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="74" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a83a15b9a380d846584f3275a54890018" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Street&lt; Id, Size &gt;::setNodePair</definition>
        <argsstring>(Id node1, Id node2)</argsstring>
        <name>setNodePair</name>
        <param>
          <type>Id</type>
          <declname>node1</declname>
        </param>
        <param>
          <type>Id</type>
          <declname>node2</declname>
        </param>
        <briefdescription>
<para>Set the street&apos;s node pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node1</parametername>
</parameternamelist>
<parameterdescription>
<para>The source node of the street </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node2</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination node of the street </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="78" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="172" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a88542a7145d33e2e1c855f13c240e7e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Street&lt; Id, Size &gt;::setNodePair</definition>
        <argsstring>(const Node&lt; Id &gt; &amp;node1, const Node&lt; Id &gt; &amp;node2)</argsstring>
        <name>setNodePair</name>
        <param>
          <type>const <ref refid="classdsm_1_1Node" kindref="compound">Node</ref>&lt; Id &gt; &amp;</type>
          <declname>node1</declname>
        </param>
        <param>
          <type>const <ref refid="classdsm_1_1Node" kindref="compound">Node</ref>&lt; Id &gt; &amp;</type>
          <declname>node2</declname>
        </param>
        <briefdescription>
<para>Set the street&apos;s node pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node1</parametername>
</parameternamelist>
<parameterdescription>
<para>The source node of the street </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node2</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination node of the street </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="82" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a7364b43eefd6cbbcec5842131aca50fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Street&lt; Id, Size &gt;::setNodePair</definition>
        <argsstring>(std::pair&lt; Id, Id &gt; pair)</argsstring>
        <name>setNodePair</name>
        <param>
          <type>std::pair&lt; Id, Id &gt;</type>
          <declname>pair</declname>
        </param>
        <briefdescription>
<para>Set the street&apos;s node pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pair</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s node pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="85" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ac00431c1c416c161c8607d7f36011863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void dsm::Street&lt; Id, Size &gt;::setMaxSpeed</definition>
        <argsstring>(double speed)</argsstring>
        <name>setMaxSpeed</name>
        <param>
          <type>double</type>
          <declname>speed</declname>
        </param>
        <briefdescription>
<para>Set the street&apos;s speed limit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
</parameternamelist>
<parameterdescription>
<para>The street&apos;s speed limit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
<parametername>If</parametername>
</parameternamelist>
<parameterdescription>
<para>the speed is negative </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="89" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="187" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a6a1959d02cf46308faeeac4875fd37fd" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Id</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; Id dsm::Street&lt; Id, Size &gt;::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <briefdescription>
<para>Get the street&apos;s id. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Id The street&apos;s id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="93" column="8" bodyfile="src/dsm/headers/Street.hpp" bodystart="198" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a3a325887bbbb09935d4f7d2925342669" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; Size dsm::Street&lt; Id, Size &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
<para>Get the street&apos;s size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size The street&apos;s size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="96" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="203" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1aa2e415dfb4cf07ec57bcada69c3136b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; Size dsm::Street&lt; Id, Size &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <briefdescription>
<para>Get the street&apos;s capacity. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size The street&apos;s capacity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="99" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="208" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1aa1066debd2c50b13885b9d69930e611a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; double dsm::Street&lt; Id, Size &gt;::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <briefdescription>
<para>Get the street&apos;s length. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double The street&apos;s length </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="102" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="213" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ab4e55f7421f405ec26e1b5c682ad20de" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::queue&lt; Size &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; const std::queue&lt; Size &gt; &amp; dsm::Street&lt; Id, Size &gt;::queue</definition>
        <argsstring>() const</argsstring>
        <name>queue</name>
        <briefdescription>
<para>Get the street&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::queue&lt;Size&gt; The street&apos;s queue </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="105" column="22" bodyfile="src/dsm/headers/Street.hpp" bodystart="218" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1acf05ca953f7aa5b3d7debcd499950d75" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::pair&lt; Id, Id &gt; &amp;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; const std::pair&lt; Id, Id &gt; &amp; dsm::Street&lt; Id, Size &gt;::nodePair</definition>
        <argsstring>() const</argsstring>
        <name>nodePair</name>
        <briefdescription>
<para>Get the street&apos;s node pair. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::pair&lt;Id, Id&gt; The street&apos;s node pair </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="108" column="21" bodyfile="src/dsm/headers/Street.hpp" bodystart="223" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a81e971d718d4f5cae839ebeaada05a0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; double dsm::Street&lt; Id, Size &gt;::density</definition>
        <argsstring>() const</argsstring>
        <name>density</name>
        <briefdescription>
<para>Get the street&apos;s density. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double The street&apos;s density </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="111" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1aa5384728acf2cb3908bd952c41803011" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; double dsm::Street&lt; Id, Size &gt;::maxSpeed</definition>
        <argsstring>() const</argsstring>
        <name>maxSpeed</name>
        <briefdescription>
<para>Get the street&apos;s speed limit. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double The street&apos;s speed limit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="114" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="233" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1abc62ec10e3b85d88508c036f60930785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Delay</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::enqueue</definition>
        <argsstring>(const Agent&lt; Id, Size, Delay &gt; &amp;agent)</argsstring>
        <name>enqueue</name>
        <param>
          <type>const <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref>&lt; Id, Size, Delay &gt; &amp;</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
<para>Add an agent to the street&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Delay</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the agent&apos;s delay </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agent</parametername>
</parameternamelist>
<parameterdescription>
<para>The agent to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="119" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ad96a2ad5f6ecd00cf40094ba405f6090" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; Id &gt;</type>
        <definition>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; std::optional&lt; Id &gt; dsm::Street&lt; Id, Size &gt;::dequeue</definition>
        <argsstring>()</argsstring>
        <name>dequeue</name>
        <briefdescription>
<para>Remove an agent from the street&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="121" column="19" bodyfile="src/dsm/headers/Street.hpp" bodystart="249" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a24078dff7ca73041ae8a61d7af368900" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Delay</type>
          </param>
        </templateparamlist>
        <type>requires std::unsigned_integral&lt; Id &gt; &amp;&amp;std::unsigned_integral&lt; Size &gt; void</type>
        <definition>requires std::unsigned_integral&lt;Id&gt;&amp;&amp; std::unsigned_integral&lt;Size&gt; void dsm::Street&lt; Id, Size &gt;::enqueue</definition>
        <argsstring>(const Agent&lt; Id, Size, Delay &gt; &amp;agent)</argsstring>
        <name>enqueue</name>
        <param>
          <type>const <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref>&lt; Id, Size, Delay &gt; &amp;</type>
          <declname>agent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="240" column="15" bodyfile="src/dsm/headers/Street.hpp" bodystart="240" bodyend="245"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> class represents a street in the network. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Id</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the street&apos;s id. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Size</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the street&apos;s capacity. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="src/dsm/headers/Street.hpp" line="29" column="3" bodyfile="src/dsm/headers/Street.hpp" bodystart="29" bodyend="122"/>
    <listofallmembers>
      <member refid="classdsm_1_1Street_1aa2e415dfb4cf07ec57bcada69c3136b5" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>capacity</name></member>
      <member refid="classdsm_1_1Street_1a81e971d718d4f5cae839ebeaada05a0b" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>density</name></member>
      <member refid="classdsm_1_1Street_1ad96a2ad5f6ecd00cf40094ba405f6090" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>dequeue</name></member>
      <member refid="classdsm_1_1Street_1abc62ec10e3b85d88508c036f60930785" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>enqueue</name></member>
      <member refid="classdsm_1_1Street_1a24078dff7ca73041ae8a61d7af368900" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>enqueue</name></member>
      <member refid="classdsm_1_1Street_1a6a1959d02cf46308faeeac4875fd37fd" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>id</name></member>
      <member refid="classdsm_1_1Street_1aa1066debd2c50b13885b9d69930e611a" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>length</name></member>
      <member refid="classdsm_1_1Street_1a2d1ab859347c98ce129d9ac9e5bf7a9a" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_capacity</name></member>
      <member refid="classdsm_1_1Street_1abb10ab6ed171be672181caf05b2b6af7" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_id</name></member>
      <member refid="classdsm_1_1Street_1a6cdc2160bf02ac9f27e8cadc26f8432c" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_len</name></member>
      <member refid="classdsm_1_1Street_1ad4c28d56ff110b5b270deca0b76f9808" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_maxSpeed</name></member>
      <member refid="classdsm_1_1Street_1a6b4b71fa7703aa69a106cf75c2d10771" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_nodePair</name></member>
      <member refid="classdsm_1_1Street_1a65440345861cd64e77fcf2eaa2abba77" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_queue</name></member>
      <member refid="classdsm_1_1Street_1a61b00bbb44683c0b0bbb8f8ad7377dd0" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_size</name></member>
      <member refid="classdsm_1_1Street_1aa5384728acf2cb3908bd952c41803011" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>maxSpeed</name></member>
      <member refid="classdsm_1_1Street_1acf05ca953f7aa5b3d7debcd499950d75" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>nodePair</name></member>
      <member refid="classdsm_1_1Street_1ab4e55f7421f405ec26e1b5c682ad20de" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>queue</name></member>
      <member refid="classdsm_1_1Street_1a55cfbf1ea269b38411310083487d96e5" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setCapacity</name></member>
      <member refid="classdsm_1_1Street_1a1864aa8dfa760187943eef2586685a79" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setId</name></member>
      <member refid="classdsm_1_1Street_1acb9278c14820710ac075c7c07380814b" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setLength</name></member>
      <member refid="classdsm_1_1Street_1ac00431c1c416c161c8607d7f36011863" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setMaxSpeed</name></member>
      <member refid="classdsm_1_1Street_1a83a15b9a380d846584f3275a54890018" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setNodePair</name></member>
      <member refid="classdsm_1_1Street_1a88542a7145d33e2e1c855f13c240e7e2" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setNodePair</name></member>
      <member refid="classdsm_1_1Street_1a7364b43eefd6cbbcec5842131aca50fc" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setNodePair</name></member>
      <member refid="classdsm_1_1Street_1ad6b99ebe61048f001caadd9f303ae216" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setQueue</name></member>
      <member refid="classdsm_1_1Street_1a3a325887bbbb09935d4f7d2925342669" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>size</name></member>
      <member refid="classdsm_1_1Street_1a1002585429a3a23e1f3c58b53f24346b" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
      <member refid="classdsm_1_1Street_1a77acd8f3557cb9eb855ab72f99b67c6f" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
      <member refid="classdsm_1_1Street_1a262b4243ec55001ce00233d24ac0a9a1" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
      <member refid="classdsm_1_1Street_1ada830ed31c1d483d221643af9f933029" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
      <member refid="classdsm_1_1Street_1a21990e15f83949ee0b15b9d1e5fced60" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
