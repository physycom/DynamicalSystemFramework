<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classdsm_1_1Street" kind="class" language="C++" prot="public">
    <compoundname>dsm::Street</compoundname>
    <includes local="no">Street.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Id</type>
      </param>
      <param>
        <type>typename Size</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classdsm_1_1Street_1a65440345861cd64e77fcf2eaa2abba77" prot="private" static="no" mutable="no">
        <type>std::queue&lt; Size &gt;</type>
        <definition>std::queue&lt;Size&gt; dsm::Street&lt; Id, Size &gt;::m_queue</definition>
        <argsstring></argsstring>
        <name>m_queue</name>
        <qualifiedname>dsm::Street::m_queue</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="31" column="16" bodyfile="src/dsm/headers/Street.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1a6b4b71fa7703aa69a106cf75c2d10771" prot="private" static="no" mutable="no">
        <type>std::pair&lt; Id, Id &gt;</type>
        <definition>std::pair&lt;Id, Id&gt; dsm::Street&lt; Id, Size &gt;::m_nodePair</definition>
        <argsstring></argsstring>
        <name>m_nodePair</name>
        <qualifiedname>dsm::Street::m_nodePair</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="32" column="15" bodyfile="src/dsm/headers/Street.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1a6cdc2160bf02ac9f27e8cadc26f8432c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double dsm::Street&lt; Id, Size &gt;::m_len</definition>
        <argsstring></argsstring>
        <name>m_len</name>
        <qualifiedname>dsm::Street::m_len</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="33" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1ad4c28d56ff110b5b270deca0b76f9808" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double dsm::Street&lt; Id, Size &gt;::m_maxSpeed</definition>
        <argsstring></argsstring>
        <name>m_maxSpeed</name>
        <qualifiedname>dsm::Street::m_maxSpeed</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="34" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1abb10ab6ed171be672181caf05b2b6af7" prot="private" static="no" mutable="no">
        <type>Id</type>
        <definition>Id dsm::Street&lt; Id, Size &gt;::m_id</definition>
        <argsstring></argsstring>
        <name>m_id</name>
        <qualifiedname>dsm::Street::m_id</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="35" column="8" bodyfile="src/dsm/headers/Street.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1a61b00bbb44683c0b0bbb8f8ad7377dd0" prot="private" static="no" mutable="no">
        <type>Size</type>
        <definition>Size dsm::Street&lt; Id, Size &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <qualifiedname>dsm::Street::m_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="36" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classdsm_1_1Street_1a2d1ab859347c98ce129d9ac9e5bf7a9a" prot="private" static="no" mutable="no">
        <type>Size</type>
        <definition>Size dsm::Street&lt; Id, Size &gt;::m_capacity</definition>
        <argsstring></argsstring>
        <name>m_capacity</name>
        <qualifiedname>dsm::Street::m_capacity</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="37" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classdsm_1_1Street_1a1002585429a3a23e1f3c58b53f24346b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>()=default</argsstring>
        <name>Street</name>
        <qualifiedname>dsm::Street::Street</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1afe71e982cae1f045e0133696a3191854" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>(Id index)</argsstring>
        <name>Street</name>
        <qualifiedname>dsm::Street::Street</qualifiedname>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="43" column="5" bodyfile="src/dsm/headers/Street.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a31ad3cfa5833a0367bb35ac4f5fe8d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>(Id index, Size capacity, double len)</argsstring>
        <name>Street</name>
        <qualifiedname>dsm::Street::Street</qualifiedname>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s capacity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="48" column="5" bodyfile="src/dsm/headers/Street.hpp" bodystart="128" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1afd4e2460e804f9b2806a52b571cc18bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>(Id index, Size capacity, double len, std::pair&lt; Id, Id &gt; nodePair)</argsstring>
        <name>Street</name>
        <qualifiedname>dsm::Street::Street</qualifiedname>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
        <param>
          <type>std::pair&lt; Id, Id &gt;</type>
          <declname>nodePair</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s capacity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodePair</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s node pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="54" column="5" bodyfile="src/dsm/headers/Street.hpp" bodystart="133" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1aaa00040f1a658da889fab600ce61e5f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>dsm::Street&lt; Id, Size &gt;::Street</definition>
        <argsstring>(Id index, Size capacity, double len, double maxSpeed, std::pair&lt; Id, Id &gt; nodePair)</argsstring>
        <name>Street</name>
        <qualifiedname>dsm::Street::Street</qualifiedname>
        <param>
          <type>Id</type>
          <declname>index</declname>
        </param>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxSpeed</declname>
        </param>
        <param>
          <type>std::pair&lt; Id, Id &gt;</type>
          <declname>nodePair</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Construct a new <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s id </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s capacity </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s length </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSpeed</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s speed limit </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodePair</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s node pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="61" column="5" bodyfile="src/dsm/headers/Street.hpp" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ada18829381e12f2bd0ccc29867b2cdb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::setId</definition>
        <argsstring>(Id id)</argsstring>
        <name>setId</name>
        <qualifiedname>dsm::Street::setId</qualifiedname>
        <param>
          <type>Id</type>
          <declname>id</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Set the street&apos;s id. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>id</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="65" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="150" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a7022595cc57600fb0b531acea0f49456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::setCapacity</definition>
        <argsstring>(Size capacity)</argsstring>
        <name>setCapacity</name>
        <qualifiedname>dsm::Street::setCapacity</qualifiedname>
        <param>
          <type>Size</type>
          <declname>capacity</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Set the street&apos;s capacity. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>capacity</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s capacity </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="68" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="155" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1adbb6ac57d1ae1cc3cb442f5943ce9254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::setLength</definition>
        <argsstring>(double len)</argsstring>
        <name>setLength</name>
        <qualifiedname>dsm::Street::setLength</qualifiedname>
        <param>
          <type>double</type>
          <declname>len</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Set the street&apos;s length. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>len</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s length </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="71" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="160" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ae4616f31df5ec83ba679701d00d8d3eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::setQueue</definition>
        <argsstring>(std::queue&lt; Size &gt; queue)</argsstring>
        <name>setQueue</name>
        <qualifiedname>dsm::Street::setQueue</qualifiedname>
        <param>
          <type>std::queue&lt; Size &gt;</type>
          <declname>queue</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Set the street&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>queue</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s queue </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="74" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="165" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a36ad992896e28b3ec09d829812aa808d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::setNodePair</definition>
        <argsstring>(Id node1, Id node2)</argsstring>
        <name>setNodePair</name>
        <qualifiedname>dsm::Street::setNodePair</qualifiedname>
        <param>
          <type>Id</type>
          <declname>node1</declname>
        </param>
        <param>
          <type>Id</type>
          <declname>node2</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Set the street&apos;s node pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node1</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>source node of the street </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node2</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>destination node of the street </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="78" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a4566f82e77e4f1324e0a093c99651043" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::setNodePair</definition>
        <argsstring>(const Node&lt; Id &gt; &amp;node1, const Node&lt; Id &gt; &amp;node2)</argsstring>
        <name>setNodePair</name>
        <qualifiedname>dsm::Street::setNodePair</qualifiedname>
        <param>
          <type>const <ref refid="classdsm_1_1Node" kindref="compound">Node</ref>&lt; Id &gt; &amp;</type>
          <declname>node1</declname>
        </param>
        <param>
          <type>const <ref refid="classdsm_1_1Node" kindref="compound">Node</ref>&lt; Id &gt; &amp;</type>
          <declname>node2</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Set the street&apos;s node pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>node1</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>source node of the street </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node2</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>destination node of the street </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="82" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a33a82dcd55a4fb58e2fbdd8447bfa78e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::setNodePair</definition>
        <argsstring>(std::pair&lt; Id, Id &gt; pair)</argsstring>
        <name>setNodePair</name>
        <qualifiedname>dsm::Street::setNodePair</qualifiedname>
        <param>
          <type>std::pair&lt; Id, Id &gt;</type>
          <declname>pair</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Set the street&apos;s node pair. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pair</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s node pair </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="85" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a5a9612b03ebc5a83ce39986d2de16c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::setMaxSpeed</definition>
        <argsstring>(double speed)</argsstring>
        <name>setMaxSpeed</name>
        <qualifiedname>dsm::Street::setMaxSpeed</qualifiedname>
        <param>
          <type>double</type>
          <declname>speed</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Set the street&apos;s speed limit. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>speed</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>street&apos;s speed limit </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::invalid_argument</parametername>
<parametername>If</parametername>
</parameternamelist>
<parameterdescription>
<para>the speed is negative </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="89" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="185" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ad118a6df7683912211201accc57834f5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Id</type>
        <definition>Id dsm::Street&lt; Id, Size &gt;::id</definition>
        <argsstring>() const</argsstring>
        <name>id</name>
        <qualifiedname>dsm::Street::id</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Get the street&apos;s id. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Id, The street&apos;s id </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="93" column="8" bodyfile="src/dsm/headers/Street.hpp" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a3f58c8387de1bc3ebdf10dc6f953e823" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size dsm::Street&lt; Id, Size &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>dsm::Street::size</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Get the street&apos;s size. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size, The street&apos;s size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="96" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="201" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a4bd2d6ef044dcdbc49c48ea1b7fab5f7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size dsm::Street&lt; Id, Size &gt;::capacity</definition>
        <argsstring>() const</argsstring>
        <name>capacity</name>
        <qualifiedname>dsm::Street::capacity</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Get the street&apos;s capacity. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Size, The street&apos;s capacity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="99" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a8fcaf6c6e3a5eacc195abcb11499e288" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dsm::Street&lt; Id, Size &gt;::length</definition>
        <argsstring>() const</argsstring>
        <name>length</name>
        <qualifiedname>dsm::Street::length</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Get the street&apos;s length. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double, The street&apos;s length </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="102" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1afb41a6b8ef3cf1bd247a726672506d7f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::queue&lt; Size &gt; &amp;</type>
        <definition>const std::queue&lt; Size &gt; &amp; dsm::Street&lt; Id, Size &gt;::queue</definition>
        <argsstring>() const</argsstring>
        <name>queue</name>
        <qualifiedname>dsm::Street::queue</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Get the street&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::queue&lt;Size&gt;, The street&apos;s queue </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="105" column="22" bodyfile="src/dsm/headers/Street.hpp" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1afb91d15f9d075abff5e003b65c66993d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::pair&lt; Id, Id &gt; &amp;</type>
        <definition>const std::pair&lt; Id, Id &gt; &amp; dsm::Street&lt; Id, Size &gt;::nodePair</definition>
        <argsstring>() const</argsstring>
        <name>nodePair</name>
        <qualifiedname>dsm::Street::nodePair</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Get the street&apos;s node pair. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>std::pair&lt;Id, Id&gt;, The street&apos;s node pair </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="108" column="21" bodyfile="src/dsm/headers/Street.hpp" bodystart="221" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a41e03a008759849a9cbbfab32f828471" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dsm::Street&lt; Id, Size &gt;::density</definition>
        <argsstring>() const</argsstring>
        <name>density</name>
        <qualifiedname>dsm::Street::density</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Get the street&apos;s density. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double, The street&apos;s density </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="111" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="226" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1ac4e212a4d223925f5d3138a7a86b753b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double dsm::Street&lt; Id, Size &gt;::maxSpeed</definition>
        <argsstring>() const</argsstring>
        <name>maxSpeed</name>
        <qualifiedname>dsm::Street::maxSpeed</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Get the street&apos;s speed limit. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>double, The street&apos;s speed limit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="114" column="12" bodyfile="src/dsm/headers/Street.hpp" bodystart="231" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a838f1a6ceb2f32e12e063707ac65e446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dsm::Street&lt; Id, Size &gt;::enqueue</definition>
        <argsstring>(const Agent&lt; Id &gt; &amp;agent)</argsstring>
        <name>enqueue</name>
        <qualifiedname>dsm::Street::enqueue</qualifiedname>
        <param>
          <type>const <ref refid="classdsm_1_1Agent" kindref="compound">Agent</ref>&lt; Id &gt; &amp;</type>
          <declname>agent</declname>
        </param>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Add an agent to the street&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>agent</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>agent to add </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="117" column="10" bodyfile="src/dsm/headers/Street.hpp" bodystart="237" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classdsm_1_1Street_1a888ba3292e7d524d4f014e1e11fe0488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::optional&lt; Id &gt;</type>
        <definition>std::optional&lt; Id &gt; dsm::Street&lt; Id, Size &gt;::dequeue</definition>
        <argsstring>()</argsstring>
        <name>dequeue</name>
        <qualifiedname>dsm::Street::dequeue</qualifiedname>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
        <briefdescription>
<para>Remove an agent from the street&apos;s queue. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dsm/headers/Street.hpp" line="119" column="19" bodyfile="src/dsm/headers/Street.hpp" bodystart="246" bodyend="256"/>
      </memberdef>
    </sectiondef>
    <requiresclause>(std::unsigned_integral&lt;Id&gt; &amp;&amp; std::unsigned_integral&lt;Size&gt;)    </requiresclause>
    <briefdescription>
<para>The <ref refid="classdsm_1_1Street" kindref="compound">Street</ref> class represents a street in the network. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Id</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the street&apos;s id. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Size</parametername>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>type of the street&apos;s capacity. It must be an unsigned integral type. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="src/dsm/headers/Street.hpp" line="29" column="3" bodyfile="src/dsm/headers/Street.hpp" bodystart="29" bodyend="120"/>
    <listofallmembers>
      <member refid="classdsm_1_1Street_1a4bd2d6ef044dcdbc49c48ea1b7fab5f7" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>capacity</name></member>
      <member refid="classdsm_1_1Street_1a41e03a008759849a9cbbfab32f828471" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>density</name></member>
      <member refid="classdsm_1_1Street_1a888ba3292e7d524d4f014e1e11fe0488" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>dequeue</name></member>
      <member refid="classdsm_1_1Street_1a838f1a6ceb2f32e12e063707ac65e446" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>enqueue</name></member>
      <member refid="classdsm_1_1Street_1ad118a6df7683912211201accc57834f5" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>id</name></member>
      <member refid="classdsm_1_1Street_1a8fcaf6c6e3a5eacc195abcb11499e288" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>length</name></member>
      <member refid="classdsm_1_1Street_1a2d1ab859347c98ce129d9ac9e5bf7a9a" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_capacity</name></member>
      <member refid="classdsm_1_1Street_1abb10ab6ed171be672181caf05b2b6af7" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_id</name></member>
      <member refid="classdsm_1_1Street_1a6cdc2160bf02ac9f27e8cadc26f8432c" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_len</name></member>
      <member refid="classdsm_1_1Street_1ad4c28d56ff110b5b270deca0b76f9808" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_maxSpeed</name></member>
      <member refid="classdsm_1_1Street_1a6b4b71fa7703aa69a106cf75c2d10771" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_nodePair</name></member>
      <member refid="classdsm_1_1Street_1a65440345861cd64e77fcf2eaa2abba77" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_queue</name></member>
      <member refid="classdsm_1_1Street_1a61b00bbb44683c0b0bbb8f8ad7377dd0" prot="private" virt="non-virtual"><scope>dsm::Street</scope><name>m_size</name></member>
      <member refid="classdsm_1_1Street_1ac4e212a4d223925f5d3138a7a86b753b" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>maxSpeed</name></member>
      <member refid="classdsm_1_1Street_1afb91d15f9d075abff5e003b65c66993d" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>nodePair</name></member>
      <member refid="classdsm_1_1Street_1afb41a6b8ef3cf1bd247a726672506d7f" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>queue</name></member>
      <member refid="classdsm_1_1Street_1a7022595cc57600fb0b531acea0f49456" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setCapacity</name></member>
      <member refid="classdsm_1_1Street_1ada18829381e12f2bd0ccc29867b2cdb7" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setId</name></member>
      <member refid="classdsm_1_1Street_1adbb6ac57d1ae1cc3cb442f5943ce9254" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setLength</name></member>
      <member refid="classdsm_1_1Street_1a5a9612b03ebc5a83ce39986d2de16c7b" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setMaxSpeed</name></member>
      <member refid="classdsm_1_1Street_1a36ad992896e28b3ec09d829812aa808d" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setNodePair</name></member>
      <member refid="classdsm_1_1Street_1a4566f82e77e4f1324e0a093c99651043" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setNodePair</name></member>
      <member refid="classdsm_1_1Street_1a33a82dcd55a4fb58e2fbdd8447bfa78e" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setNodePair</name></member>
      <member refid="classdsm_1_1Street_1ae4616f31df5ec83ba679701d00d8d3eb" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>setQueue</name></member>
      <member refid="classdsm_1_1Street_1a3f58c8387de1bc3ebdf10dc6f953e823" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>size</name></member>
      <member refid="classdsm_1_1Street_1a1002585429a3a23e1f3c58b53f24346b" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
      <member refid="classdsm_1_1Street_1afe71e982cae1f045e0133696a3191854" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
      <member refid="classdsm_1_1Street_1a31ad3cfa5833a0367bb35ac4f5fe8d81" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
      <member refid="classdsm_1_1Street_1afd4e2460e804f9b2806a52b571cc18bf" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
      <member refid="classdsm_1_1Street_1aaa00040f1a658da889fab600ce61e5f1" prot="public" virt="non-virtual"><scope>dsm::Street</scope><name>Street</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
