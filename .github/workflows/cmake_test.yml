name: "CI: Run tests"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: COVERAGE

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - name: Update apt repo
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update

    - name: Install tools on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt install lcov gcovr libtbb-dev libspdlog-dev libsimdjson-dev

    - name: Install tools on macOS
      if: matrix.os == 'macos-latest'
      run: brew install tbb spdlog simdjson
    
    - uses: actions/checkout@v4

    - name: Configure CMake on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      working-directory: ${{github.workspace}}/test
      run: cmake -DTEST=ON -DCODE_COVERAGE=ON -B ${{github.workspace}}/test/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Configure CMake on macOS
      if: matrix.os == 'macos-latest'
      working-directory: ${{github.workspace}}/test
      run: cmake -B ${{github.workspace}}/test/build

    - name: Build on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      working-directory: ${{github.workspace}}/test
      run: cmake --build ${{github.workspace}}/test/build -j$(nproc) --config ${{env.BUILD_TYPE}}

    - name: Build on macOS
      if: matrix.os == 'macos-latest'
      working-directory: ${{github.workspace}}/test
      run: cmake --build ${{github.workspace}}/test/build -j$(nproc)

    - name: Run tests
      working-directory: ${{github.workspace}}/test
      run: ./dsf_tests.out
    
    - name: Create coverage report
      if: matrix.os == 'ubuntu-latest'
      working-directory: ${{github.workspace}}/test
      run: lcov --capture --directory .. --output-file coverage.xml

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest'
      uses: codecov/codecov-action@v4.5.0
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        token: ${{ secrets.CODECOV_TOKEN }} 
        file: ${{github.workspace}}/test/coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true
